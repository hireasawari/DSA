#include<stdio.h>
#include<stdlib.h>


struct queue{
    int front;
    int rear;
    int *arr;
    int size;
};

int isFull(struct queue *q){
    if(q->rear==q->size){
        printf("queue full");
        return 1;
    }
    else{
        return 0;
    }
}
int isEmpty(struct queue *q){
    if(q->rear==q->front){
        printf("queue empty");
        return 1;
    }
    else{
        return 0;
    }
}

void enqueue(struct queue *q,int value){
    if(isFull(q)){
       printf("queue full cannot enqueue.");
      
    }
    else{
        q->rear++;
        q->arr[q->rear]=value;
        printf("\n%d enqueued ",value);
    }
}
int  dequeue(struct queue *q){
    if(isEmpty(q)){
        printf("queue empty cannot enqueue");
        return -1;
    }
    else{
        int a=q->arr[q->front];
        q->front++;
        return a;
    }
} 


void display(struct queue * q){
    printf("\nqueue:");
    for(int i=q->front;i<=q->rear;i++){
        printf("\n%d",q->arr[i]);
    }
}


int main(){
    struct queue *q=(struct queue* )malloc(sizeof(struct queue));
    q->front=0;
    q->rear=-1;
    q->size=10;
    q->arr=(int* )malloc(sizeof(int)*q->size);
    
    isEmpty(q);
    enqueue(q,10);
    enqueue(q,20);
    enqueue(q,30);
    enqueue(q,40);
    
    display(q);
    
    printf("\n%d dequeued",dequeue(q));
    printf("\n%d dequeued",dequeue(q));
    
    display(q);
    
    
}
