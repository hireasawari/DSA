#include<stdio.h>
#include<stdlib.h>

struct stack{
    int top;
    int size;
    int *arr;
};

int isEmpty(struct stack*s){
    if(s->top==-1){
        printf("stack empty");
        return 1;
    }
    else{
        return 0;
    }
}
int isFull(struct stack*s){
    if(s->top==s->size-1){
        printf("stack full");
        return 1;
    }
    else{
        return 0;
    }
}

void push(struct stack *s,int value){
    if(isFull(s)){
        printf("Stack full cannot push.");
    }
    else{
        s->arr[++s->top]=value;
        printf("\n%d pushed.",value);
    }
}

void display(struct stack *s){
    for(int i=0;i<=s->top;i++){
        printf("\nStack:");
        printf("%d",s->arr[i]);
    }
}

int pop(struct stack *s){
    if(isEmpty(s)){
        printf("stack empty cannot pop.");
    }
    else{
        return s->arr[s->top--];
        
    }
}

void peek(struct  stack *s){
    int peek=s->arr[s->top];
    printf("top=%d",peek);
}


int main(){
    struct stack *s=(struct stack* )malloc(sizeof(struct stack));
    s->top=-1;
    s->size=10;
    s->arr=(int*)malloc(s->size* sizeof(int));
    
    isEmpty(s);
    push(s,1);
    push(s,2);
    push(s,3);
    push(s,4);
    display(s);
    printf("\n%d popped",pop(s));
    printf("\n");
    peek(s);
}

