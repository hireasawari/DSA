#include<stdio.h>    //12:10
#include<stdlib.h>

struct queue{
    int front;
    int rear;
    int size;
    int *arr;
    
};

int isFull(struct queue *q){
    
    if((q->rear+1)%q->size==q->front){
        printf("queue full");
        return 1;
    }
    else
    return 0;
}

int isEmpty(struct queue *q){
    if(q->rear==q->front==0){
        printf("Queue empty.");
        return 1;
    }
    
    else 
    return 0;
}

void enqueue(struct queue *q,int data){
    
    if(isFull(q)){
        printf("\nQueue full.Cannot enqueue.");
        
    }
    else{
        q->rear=(q->rear+1)%q->size;
        q->arr[q->rear]=data;
        printf("\n%d enqueued.",data);
    }
}

// void dequeue(){
    
//     if(isEmpty(q)){
//         printf("\nQueue empty.Cannot dequeue.");
//         return -1;
//     }
//     else{
        
        
        
        
//     }
// }

void display(struct queue *q){
    
    printf("Display");
    for(int i=0;i<q->rear;i++){
        printf("%d",q->arr[i]);
    }
}


int main(){
    int data;
    struct queue *q=(struct queue *)malloc(sizeof(struct queue));
    q->front=0;
    q->rear=0;
    q->size=6;
    q->arr=(int *)malloc(q->size*sizeof(int));
    
    printf("Enter data: ");
    scanf("%d",&data);
    enqueue(q,data);
    display(q);
    
    
    
    
}
